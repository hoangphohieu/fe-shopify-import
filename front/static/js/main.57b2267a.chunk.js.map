{"version":3,"sources":["constants.js","Home/LocalItem.js","Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["FetchDrive","LocalItem","props","useState","mockData","MockData","setMockData","productName","name","Option1Name","Option2Name","Option3Name","list","MockVariant","setMockVariant","product","Product","renderLocal","listOption","console","log","undefined","className","type","onChange","e","target","value","placeholder","split","join","Vendor","Type","Tags","id","scope","map","item","key","itemListOption","key2","param","changeVariant","onClick","NameDrive","Option1Value","Option2Value","Option3Value","VariantPrice","VariantCompareAtPrice","VariantInventoryQty","VariantSKU","data","listVariant","filter","length","i","fetch","method","headers","body","JSON","stringify","items","then","response","json","res","window","location","reload","catch","err","addProduct","Fragment","Home","LinkParent","setLinkParent","folderChild","setfolderChild","dataChild","setdataChild","SelectProduct","setSelectProduct","show","showProduct","setshowProduct","useEffect","ignore","a","axios","url","constants","link","result","trashed","webContentLink","folderChild2","shift","fetchData","createChild","alert","j","itemProduct","trim","toUpperCase","push","error","itemsKhauTrang","forEach","_","uniq","itemFilter","endsWith","replace","pop","mimeType","csvDownload","arrKhauTrang","itemSelect","changeItemProduct","App","setProduct","item_post","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.57b2267a.chunk.js","sourcesContent":["export const FetchDrive = \"http://157.230.244.57:7001/parent\";\r\n// export const FetchChild = \"http://localhost:7000/child\";","import React, { useState, useEffect } from 'react';\r\nimport _ from \"lodash\";\r\nfunction LocalItem(props) {\r\n      // console.log(props);\r\n\r\n      const [MockData, setMockData] = useState(props.mockData);\r\n      const [MockVariant, setMockVariant] = useState({\r\n            productName: props.name,\r\n            Option1Name: (props.mockData) ? props.mockData[\"Option1 Name\"] : \"\",\r\n            Option2Name: (props.mockData) ? props.mockData[\"Option2 Name\"] : \"\",\r\n            Option3Name: (props.mockData) ? props.mockData[\"Option3 Name\"] : \"\",\r\n            list: props.list\r\n      });\r\n      let product = props.Product;\r\n\r\n      \r\n      let renderLocal = \"\";\r\n      let changeVariant = (param, key, value) => {\r\n            let list = MockVariant.list;\r\n            list[key][param] = value;\r\n            setMockVariant({ ...MockVariant, list: [...list] });\r\n      }\r\n      let listOption = ['NameDrive', 'Option1Value', 'Option2Value', 'Option3Value', 'VariantPrice', 'VariantCompareAtPrice', 'VariantInventoryQty', 'VariantSKU']\r\n\r\n      let addVariant = () => {\r\n            setMockVariant({\r\n                  ...MockVariant, list: [...MockVariant.list, {\r\n                        NameDrive: \"\",\r\n                        Option1Value: \"\",\r\n                        Option2Value: \"\",\r\n                        Option3Value: \"\",\r\n                        VariantPrice: \"\",\r\n                        VariantCompareAtPrice: \"\",\r\n                        VariantInventoryQty: \"\",\r\n                        VariantSKU: \"\"\r\n                  }]\r\n            });\r\n      }\r\n      let addProduct = (product) => {\r\n\r\n            let data = { ...MockData };\r\n            // data[\"Handle\"] = _.kebabCase(data[\"Title\"]) + \"-\";\r\n            data[\"Option1 Name\"] = MockVariant.Option1Name;\r\n            data[\"Option2 Name\"] = MockVariant.Option2Name;\r\n            data[\"Option3 Name\"] = MockVariant.Option3Name;\r\n\r\n            let listVariant = MockVariant.list.filter(item => (item.NameDrive !== \"\"\r\n                  | item.Option1Value !== \"\"\r\n                  | item.Option2Value !== \"\"\r\n                  | item.Option3Value !== \"\"\r\n                  | item.VariantPrice !== \"\"\r\n                  | item.VariantCompareAtPrice !== \"\"\r\n                  | item.VariantInventoryQty !== \"\"\r\n                  | item.VariantSKU !== \"\"\r\n            ))\r\n\r\n            let proFilter = product.filter(item => item.productName === MockVariant.productName);\r\n            if (proFilter.length === 1) {\r\n                  for (let i = 0; i < product.length; i++) {\r\n                        if (product[i].productName === MockVariant.productName)\r\n                              product[i] = {\r\n                                    productName: MockVariant.productName,\r\n                                    mockData: data,\r\n                                    listVariant: listVariant\r\n                              }\r\n                  }\r\n            }\r\n            else {\r\n                  product = [...product, {\r\n                        productName: MockVariant.productName,\r\n                        mockData: data,\r\n                        listVariant: listVariant\r\n                  }]\r\n            }\r\n\r\n            fetch(\"http://157.230.244.57:7000/shopifyItem\", {\r\n                  method: \"PUT\",\r\n                  headers: {\r\n                        'Content-Type': 'application/json'\r\n                  },\r\n                  body: JSON.stringify({\r\n                        \"item_post\": {\r\n                              items: product,\r\n                              id: \"shopifyItem\",\r\n                        }\r\n                  })\r\n            })\r\n                  .then(response => response.json())\r\n                  .then(res => {\r\n                        window.location.reload(true);\r\n                  })\r\n                  .catch(err => {\r\n                        window.location.reload(true);\r\n                  })\r\n\r\n   \r\n\r\n      }\r\n      let deleteProduct = () => {\r\n            let product = props.Product.map(item => {\r\n                  if (item.productName === MockVariant.productName)\r\n                        return null\r\n                  else return item\r\n            });\r\n            console.log(product);\r\n            product = product.filter(item => item !== null);\r\n\r\n            fetch(\"http://157.230.244.57:7000/shopifyItem\", {\r\n                  method: \"PUT\",\r\n                  headers: {\r\n                        'Content-Type': 'application/json'\r\n                  },\r\n                  body: JSON.stringify({\r\n                        \"item_post\": {\r\n                              items: product,\r\n                              id: \"shopifyItem\",\r\n                        }\r\n                  })\r\n            })\r\n                  .then(response => response.json())\r\n                  .then(res => {\r\n                        window.location.reload(true);\r\n                  })\r\n                  .catch(err => {\r\n                        window.location.reload(true);\r\n                  })\r\n\r\n      }\r\n      console.log(product);\r\n      if (props.mockData !== undefined) renderLocal = <div className=\"modal-app\">\r\n\r\n            <div className=\"catdat_tongquat mt-5\">\r\n                  <div className=\"one-pro\">\r\n                        <span>product Name</span>\r\n                        <input type=\"text\"\r\n                              onChange={(e) => setMockVariant({ ...MockVariant, productName: e.target.value })}\r\n                              value={MockVariant.productName}\r\n                              placeholder=\"product Name\"\r\n                        />\r\n                  </div>\r\n\r\n                  {/* <div className=\"one-pro\">\r\n                        <span>Title ()</span>\r\n                        <input type=\"text\"\r\n                              onChange={(e) => setMockData({ ...MockData, Title: e.target.value })}\r\n                              value={MockData.Title}\r\n                        />\r\n                  </div> */}\r\n                  <div className=\"one-pro\">\r\n                        <span>Body (HTML)</span>\r\n                        <input type=\"text\"\r\n                              onChange={(e) => setMockData({ ...MockData, \"Body (HTML)\": (e.target.value).split(\",\").join(\"&#44;\").split('\"').join(\"\") })}\r\n                              value={MockData[\"Body (HTML)\"]}\r\n                        />\r\n                  </div>\r\n                  <div className=\"one-pro\">\r\n                        <span>Vendor (nhà cung cấp)</span>\r\n                        <input type=\"text\"\r\n                              onChange={(e) => setMockData({ ...MockData, Vendor: e.target.value })}\r\n                              value={MockData.Vendor}\r\n                        />\r\n                  </div>\r\n                  <div className=\"one-pro\">\r\n                        <span>Type (loại sản phẩm: phonecase,...)</span>\r\n                        <input type=\"text\"\r\n                              onChange={(e) => setMockData({ ...MockData, Type: e.target.value })}\r\n                              value={MockData.Type}\r\n                        />\r\n                  </div>\r\n                  <div className=\"one-pro\">\r\n                        <span>Tags (tag sản phẩm, ngăn cách bởi dấu phẩy)</span>\r\n                        <input type=\"text\"\r\n                              onChange={(e) => setMockData({ ...MockData, Tags: e.target.value })}\r\n                              value={MockData.Tags}\r\n                        />\r\n                  </div>\r\n                  <div className=\"one-pro\">\r\n                        <span>Variant Grams (cân nặng sản phẩm)</span>\r\n                        <input type=\"text\"\r\n                              onChange={(e) => setMockData({ ...MockData, \"Variant Grams\": e.target.value })}\r\n                              value={MockData[\"Variant Grams\"]}\r\n                        />\r\n                  </div>\r\n                  <div className=\"one-pro\">\r\n                        <span>Variant Inventory Qty (lượng hàng trong kho)</span>\r\n                        <input type=\"text\"\r\n                              onChange={(e) => setMockData({ ...MockData, \"Variant Inventory Qty\": e.target.value })}\r\n                              value={MockData[\"Variant Inventory Qty\"]}\r\n                        />\r\n                  </div>\r\n                  <div className=\"one-pro\">\r\n                        <span>Variant Inventory Policy (deny: hết kho thì thôi, continue hết kho vẫn bán)</span>\r\n                        <select id=\"Variant_Inventory_Policy\" onChange={(e) => setMockData({ ...MockData, \"Variant Inventory Policy\": e.target.value })}>\r\n                              <option value=\"deny\">deny</option>\r\n                              <option value=\"continue\">continue</option>\r\n                        </select>\r\n                  </div>\r\n                  <div className=\"one-pro\">\r\n                        <span>Variant Price (giá thật sự)</span>\r\n                        <input type=\"text\"\r\n                              onChange={(e) => setMockData({ ...MockData, \"Variant Price\": e.target.value })}\r\n                              value={MockData[\"Variant Price\"]}\r\n                        />\r\n                  </div>\r\n                  <div className=\"one-pro\">\r\n                        <span>Variant Compare At Price (giá ảo)</span>\r\n                        <input type=\"text\"\r\n                              onChange={(e) => setMockData({ ...MockData, \"Variant Compare At Price\": e.target.value })}\r\n                              value={MockData[\"Variant Compare At Price\"]}\r\n                        />\r\n                  </div>\r\n                  <div className=\"one-pro\">\r\n                        <span>Variant Weight Unit (đơn vị cân nặng)</span>\r\n                        <select id=\"Variant_Weight_Unit\" onChange={(e) => setMockData({ ...MockData, \"Variant Weight Unit\": e.target.value })} >\r\n                              <option value=\"g\">g</option>\r\n                              <option value=\"kg\">kg</option>\r\n                              <option value=\"lb\">lb</option>\r\n                              <option value=\"oz\">oz</option>\r\n                        </select>\r\n                  </div>\r\n            </div>\r\n\r\n            <div className=\"caidat_bienthe\">\r\n                  <table className=\"\">\r\n                        <thead>\r\n                              <tr>\r\n                                    <td >NameDrive</td>\r\n                                    <th scope=\"col\">\r\n                                          <input type=\"text\"\r\n                                                onChange={(e) => setMockVariant({ ...MockVariant, Option1Name: e.target.value })}\r\n                                                value={MockVariant.Option1Name}\r\n                                                placeholder=\"option1 name\"\r\n                                          />\r\n                                    </th>\r\n                                    <th scope=\"col\">\r\n                                          <input type=\"text\"\r\n                                                onChange={(e) => setMockVariant({ ...MockVariant, Option2Name: e.target.value })}\r\n                                                value={MockVariant.Option2Name}\r\n                                                placeholder=\"option2 name\"\r\n                                          />\r\n                                    </th>\r\n                                    <th scope=\"col\">\r\n                                          <input type=\"text\"\r\n                                                onChange={(e) => setMockVariant({ ...MockVariant, Option3Name: e.target.value })}\r\n                                                value={MockVariant.Option3Name}\r\n                                                placeholder=\"option3 name\"\r\n                                          />\r\n                                    </th>\r\n                                    <td >giá thật</td>\r\n                                    <td >giá ảo</td>\r\n                                    <td >kho</td>\r\n                                    <td >sku</td>\r\n                              </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                              {MockVariant.list.map((item, key) => <tr key={key}>\r\n                                    {listOption.map((itemListOption, key2) => <td key={key2}>\r\n                                          <input type=\"text\"\r\n                                                onChange={(e) => changeVariant(itemListOption, key, e.target.value)}\r\n                                                value={item[itemListOption]}\r\n                                          />\r\n                                    </td>)}\r\n\r\n\r\n                              </tr>)}\r\n\r\n\r\n                        </tbody>\r\n                  </table>\r\n            </div>\r\n\r\n            <button className=\"add_variant mt-3\" onClick={addVariant}>\r\n                  add Variant\r\n                    </button>\r\n            <br />\r\n            <button onClick={() => addProduct(product)} className=\"mt-5 mr-2\">\r\n                  Lưu Sản phẩm\r\n                   </button>\r\n            <button onClick={deleteProduct}>\r\n                  xóa sản phẩm\r\n                   </button>\r\n      </div>\r\n\r\n\r\n\r\n      return (\r\n            <React.Fragment>\r\n                  {renderLocal}\r\n            </React.Fragment>\r\n      );\r\n}\r\n\r\nexport default LocalItem;\r\n\r\n\r\n\r\n\r\n\r\n// {\r\n//       \"Handle\": \"\",\r\n//       \"Title\": \"\",\r\n//       \"Body (HTML)\": \"\",\r\n//       \"Vendor\": \"\",\r\n//       \"Type\": \"\",\r\n//       \"Tags\": \"\",\r\n//       \"Published\": \"\",\r\n//       \"Option1 Name\": \"\",\r\n//       \"Option1 Value\": \"\",\r\n//       \"Option2 Name\": \"\",\r\n//       \"Option2 Value\": \"\",\r\n//       \"Option3 Name\": \"\",\r\n//       \"Option3 Value\": \"\",\r\n//       \"Variant SKU\": \"\",\r\n//       \"Variant Grams\": \"\",\r\n//       \"Variant Inventory Tracker\": \"\",\r\n//       \"Variant Inventory Qty\": null,\r\n//       \"Variant Inventory Policy\": \"deny\",\r\n//       \"Variant Fulfillment Service\": \"manual\",\r\n//       \"Variant Price\": \"\",\r\n//       \"Variant Compare At Price\": \"\",\r\n//       \"Variant Requires Shipping\": \"TRUE\",\r\n//       \"Variant Taxable\": \"TRUE\",\r\n//       \"Variant Barcode\": \"\",\r\n//       \"Image Src\": \"\",\r\n//       \"Image Position\": \"\",\r\n//       \"Image Alt Text\": \"\",\r\n//       \"Gift Card\": \"FALSE\",\r\n//       \"SEO Title\": \"\",\r\n//       \"SEO Description\": \"\",\r\n//       \"Google Shopping / Google Product Category\": \"\",\r\n//       \"Google Shopping / Gender\": \"\",\r\n//       \"Google Shopping / Age Group\": \"\",\r\n//       \"Google Shopping / MPN\": \"\",\r\n//       \"Google Shopping / AdWords Grouping\": \"\",\r\n//       \"Google Shopping / AdWords Labels\": \"\",\r\n//       \"Google Shopping / Condition\": \"\",\r\n//       \"Google Shopping / Custom Product\": \"\",\r\n//       \"Google Shopping / Custom Label 0\": \"\",\r\n//       \"Google Shopping / Custom Label 1\": \"\",\r\n//       \"Google Shopping / Custom Label 2\": \"\",\r\n//       \"Google Shopping / Custom Label 3\": \"\",\r\n//       \"Google Shopping / Custom Label 4\": \"\",\r\n//       \"Variant Image\": \"\",\r\n//       \"Variant Weight Unit\": \"\",\r\n//       \"Variant Tax Code\": \"\",\r\n//       \"Cost per item\": \"\"\r\n// }","import React, { useState, useEffect } from 'react';\r\nimport * as constants from \"../constants\";\r\nimport axios from \"axios\";\r\nimport csvDownload from 'json-to-csv-export';\r\nimport _ from \"lodash\";\r\nimport LocalItem from './LocalItem';\r\nfunction Home(props) {\r\n    const [LinkParent, setLinkParent] = useState(\"\");\r\n    const [folderChild, setfolderChild] = useState([]);\r\n    const [dataChild, setdataChild] = useState([]);\r\n    const [SelectProduct, setSelectProduct] = useState(null);\r\n    const [showProduct, setshowProduct] = useState({\r\n        mockData: {\r\n            \"Handle\": \"\",\r\n            \"Title\": \"\",\r\n            \"Body (HTML)\": '',\r\n            \"Vendor\": \"\",\r\n            \"Type\": \"\",\r\n            \"Tags\": \"\",\r\n            \"Published\": \"\",\r\n            \"Option1 Name\": \"\",\r\n            \"Option1 Value\": \"\",\r\n            \"Option2 Name\": \"\",\r\n            \"Option2 Value\": \"\",\r\n            \"Option3 Name\": \"\",\r\n            \"Option3 Value\": \"\",\r\n            \"Variant SKU\": \"\",\r\n            \"Variant Grams\": \"\",\r\n            \"Variant Inventory Tracker\": \"\",\r\n            \"Variant Inventory Qty\": null,\r\n            \"Variant Inventory Policy\": \"deny\",\r\n            \"Variant Fulfillment Service\": \"manual\",\r\n            \"Variant Price\": \"\",\r\n            \"Variant Compare At Price\": \"\",\r\n            \"Variant Requires Shipping\": \"TRUE\",\r\n            \"Variant Taxable\": \"TRUE\",\r\n            \"Variant Barcode\": \"\",\r\n            \"Image Src\": \"\",\r\n            \"Image Position\": \"\",\r\n            \"Image Alt Text\": \"\",\r\n            \"Gift Card\": \"FALSE\",\r\n            \"SEO Title\": \"\",\r\n            \"SEO Description\": \"\",\r\n            \"Google Shopping / Google Product Category\": \"\",\r\n            \"Google Shopping / Gender\": \"\",\r\n            \"Google Shopping / Age Group\": \"\",\r\n            \"Google Shopping / MPN\": \"\",\r\n            \"Google Shopping / AdWords Grouping\": \"\",\r\n            \"Google Shopping / AdWords Labels\": \"\",\r\n            \"Google Shopping / Condition\": \"\",\r\n            \"Google Shopping / Custom Product\": \"\",\r\n            \"Google Shopping / Custom Label 0\": \"\",\r\n            \"Google Shopping / Custom Label 1\": \"\",\r\n            \"Google Shopping / Custom Label 2\": \"\",\r\n            \"Google Shopping / Custom Label 3\": \"\",\r\n            \"Google Shopping / Custom Label 4\": \"\",\r\n            \"Variant Image\": \"\",\r\n            \"Variant Weight Unit\": \"\",\r\n            \"Variant Tax Code\": \"\",\r\n            \"Cost per item\": \"\"\r\n        }\r\n        , show: false, list: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        let ignore = false;\r\n        async function fetchData() {\r\n            let result = await axios({\r\n                method: 'post',\r\n                url: constants.FetchDrive,\r\n                data: {\r\n                    link: folderChild[0].id\r\n                }\r\n            });\r\n            result = result.data.filter(item => { return item.trashed === false }).map(item => { return { name: item.name, url: item.webContentLink } }).filter(item => { return item.name.split(\".\")[1] !== \"psd\" });\r\n\r\n            if (!ignore) {\r\n                setdataChild([...dataChild, { name: folderChild[0].name, data: result }]);\r\n                let folderChild2 = folderChild;\r\n                folderChild2.shift();\r\n                setfolderChild([...folderChild2]);\r\n            };\r\n        }\r\n        // console.log(folderChild);\r\n        // console.log(dataChild);\r\n        if (folderChild.length > 0) fetchData();\r\n        return () => { ignore = true; }\r\n    }, [folderChild]);\r\n\r\n\r\n    let createChild = (dataChild, product) => {\r\n        console.log(dataChild);\r\n        console.log(product);\r\n        let items = [];\r\n        if (dataChild.name.split(\"-\").length !== 2) { // neu thu muc co 2 dau - thi loi\r\n            alert(\"ten thu muc chi duoc 1 dau - \");\r\n            window.location.reload(true);\r\n            return null;\r\n\r\n        }\r\n        for (let j = 0; j < product.listVariant.length; j++) {\r\n            try {\r\n                let mockData = {\r\n                    \"Handle\": \"\",\r\n                    \"Title\": \"\",\r\n                    \"Body (HTML)\": '',\r\n                    \"Vendor\": \"\",\r\n                    \"Type\": \"\",\r\n                    \"Tags\": \"\",\r\n                    \"Published\": \"\",\r\n                    \"Option1 Name\": \"\",\r\n                    \"Option1 Value\": \"\",\r\n                    \"Option2 Name\": \"\",\r\n                    \"Option2 Value\": \"\",\r\n                    \"Option3 Name\": \"\",\r\n                    \"Option3 Value\": \"\",\r\n                    \"Variant SKU\": \"\",\r\n                    \"Variant Grams\": \"\",\r\n                    \"Variant Inventory Tracker\": \"\",\r\n                    \"Variant Inventory Qty\": null,\r\n                    \"Variant Inventory Policy\": \"deny\",\r\n                    \"Variant Fulfillment Service\": \"manual\",\r\n                    \"Variant Price\": \"\",\r\n                    \"Variant Compare At Price\": \"\",\r\n                    \"Variant Requires Shipping\": \"TRUE\",\r\n                    \"Variant Taxable\": \"TRUE\",\r\n                    \"Variant Barcode\": \"\",\r\n                    \"Image Src\": \"\",\r\n                    \"Image Position\": \"\",\r\n                    \"Image Alt Text\": \"\",\r\n                    \"Gift Card\": \"\",\r\n                    \"SEO Title\": \"\",\r\n                    \"SEO Description\": \"\",\r\n                    \"Google Shopping / Google Product Category\": \"\",\r\n                    \"Google Shopping / Gender\": \"\",\r\n                    \"Google Shopping / Age Group\": \"\",\r\n                    \"Google Shopping / MPN\": \"\",\r\n                    \"Google Shopping / AdWords Grouping\": \"\",\r\n                    \"Google Shopping / AdWords Labels\": \"\",\r\n                    \"Google Shopping / Condition\": \"\",\r\n                    \"Google Shopping / Custom Product\": \"\",\r\n                    \"Google Shopping / Custom Label 0\": \"\",\r\n                    \"Google Shopping / Custom Label 1\": \"\",\r\n                    \"Google Shopping / Custom Label 2\": \"\",\r\n                    \"Google Shopping / Custom Label 3\": \"\",\r\n                    \"Google Shopping / Custom Label 4\": \"\",\r\n                    \"Variant Image\": \"\",\r\n                    \"Variant Weight Unit\": \"\",\r\n                    \"Variant Tax Code\": \"\",\r\n                    \"Cost per item\": \"\"\r\n                }\r\n                if (j === 0) {\r\n                    mockData = { ...product.mockData };\r\n                    mockData[\"Handle\"] = dataChild.name.split(\" \").join(\"-\");\r\n                    mockData[\"Title\"] = dataChild.name.split(\"-\")[0];\r\n                    mockData[\"Gift Card\"] = \"FALSE\";\r\n                }\r\n                mockData[\"Handle\"] = dataChild.name.split(\" \").join(\"-\");\r\n                mockData[\"Variant Image\"] = dataChild.data.filter(param => { return param.name.split(\".\")[0] === product.listVariant[j].NameDrive })[0].url.split(\"&\")[0];\r\n                let itemProduct = product.listVariant[j];\r\n                if (itemProduct.Option1Value !== \"\") {\r\n                    mockData[\"Option1 Value\"] = itemProduct.Option1Value;\r\n                    mockData[\"Option2 Value\"] = itemProduct.Option2Value;\r\n                    mockData[\"Option3 Value\"] = itemProduct.Option3Value;\r\n                    mockData[\"Variant Compare At Price\"] = itemProduct.VariantCompareAtPrice;\r\n                    mockData[\"Variant Inventory Qty\"] = itemProduct.VariantInventoryQty;\r\n                    mockData[\"Variant Price\"] = itemProduct.VariantPrice;\r\n                    mockData[\"Variant SKU\"] = dataChild.name.split(\"-\")[1];\r\n                    if (product.productName === \"áo 3d\") {\r\n                        if (itemProduct[\"Option1Value\"].trim().toUpperCase() === \"HOODIE\")\r\n                            mockData[\"Variant SKU\"] = dataChild.name.split(\"-\")[1] + \"-\" + \"LMS\" + \"-\" + itemProduct[\"Option2Value\"];\r\n                        else if (itemProduct[\"Option1Value\"].trim().toUpperCase() === \"T-SHIRT\")\r\n                            mockData[\"Variant SKU\"] = dataChild.name.split(\"-\")[1] + \"-\" + \"TX\" + \"-\" + itemProduct[\"Option2Value\"];\r\n                        else if (itemProduct[\"Option1Value\"].trim().toUpperCase() === \"SWEATER\")\r\n                            mockData[\"Variant SKU\"] = dataChild.name.split(\"-\")[1] + \"-\" + \"WY\" + \"-\" + itemProduct[\"Option2Value\"];\r\n                    }\r\n                    items.push(mockData);\r\n                }\r\n                else {\r\n                    mockData[\"Variant Image\"] = \"\";\r\n                    mockData[\"Variant Inventory Policy\"] = \"\";\r\n                    mockData[\"Variant Fulfillment Service\"] = \"\";\r\n                    mockData[\"Variant Requires Shipping\"] = \"\";\r\n                    mockData[\"Variant Taxable\"] = \"\";\r\n                    items.push(mockData);\r\n                }\r\n            } catch (error) {\r\n                // alert(\"khai bao tendrive khong dung\")\r\n            }\r\n        }\r\n\r\n        if (product.productName === \"khẩu trang 1\") items = itemsKhauTrang([...items], product);\r\n\r\n        items.forEach(item => { // xóa trường gì đó, phải có\r\n            if (item[\"Variant Inventory Qty\"] === \"\") delete item[\"Variant Inventory Qty\"]\r\n        });\r\n\r\n        let itemsImg = _.uniq(product.listVariant.map(item => item.NameDrive)).map(item => {\r\n            return dataChild.data.filter(itemFilter => { return itemFilter.name.split(\".\")[0] === item })[0]\r\n        }).filter(item => item !== undefined);\r\n\r\n\r\n\r\n        itemsImg.forEach((param, key) => {\r\n            try { // khi khai bao  giong\r\n                items[key][\"Image Position\"] = key + 1;\r\n                items[key][\"Image Src\"] = param.url.split(\"&\")[0];\r\n                // console.log(param);\r\n            } catch (error) {\r\n                // alert(\"sai roi ban\")\r\n            }\r\n\r\n        })\r\n\r\n        return items\r\n    }\r\n    useEffect(() => {\r\n        if (folderChild.length === 0 && dataChild.length !== 0) {\r\n            let product = props.Product.filter(item => item.productName === SelectProduct)[0];\r\n            let items = []\r\n            for (let i = 0; i < dataChild.length; i++) {\r\n\r\n\r\n                items = [...items, ...createChild(dataChild[i], product)]\r\n                // console.log(items);\r\n            }\r\n\r\n\r\n            if (items.filter(item => item === null).length === 0) csvDownload(items);\r\n            setdataChild([]);\r\n        }\r\n    });\r\n\r\n    async function fetchFolderParent() { // fetch folder tổng\r\n        if (SelectProduct !== null) {\r\n            let id = LinkParent;\r\n            if (id.endsWith(\"?usp=sharing\")) id = id.replace(\"?usp=sharing\", \"\");\r\n            id = id.split(\"/\").pop();\r\n            let result = await axios({\r\n                method: 'post',\r\n                url: constants.FetchDrive,\r\n                data: {\r\n                    link: id\r\n                }\r\n            });\r\n            result = result.data\r\n\r\n            if (result.length === 0) alert(\"kiem tra lai url\")\r\n            else {\r\n                result = result.filter(item => item.mimeType === \"application/vnd.google-apps.folder\" && item.trashed === false).map(item => { return { name: item.name, id: item.id } });\r\n                setdataChild([]);\r\n                setfolderChild(result);\r\n            }\r\n        }\r\n        else {\r\n            alert(\"please select product\");\r\n        }\r\n\r\n\r\n    }\r\n\r\n    let itemsKhauTrang = (items, product) => {\r\n        let mockData = {\r\n            \"Handle\": \"\",\r\n            \"Title\": \"\",\r\n            \"Body (HTML)\": '',\r\n            \"Vendor\": \"\",\r\n            \"Type\": \"\",\r\n            \"Tags\": \"\",\r\n            \"Published\": \"\",\r\n            \"Option1 Name\": \"\",\r\n            \"Option1 Value\": \"\",\r\n            \"Option2 Name\": \"\",\r\n            \"Option2 Value\": \"\",\r\n            \"Option3 Name\": \"\",\r\n            \"Option3 Value\": \"\",\r\n            \"Variant SKU\": \"\",\r\n            \"Variant Grams\": \"\",\r\n            \"Variant Inventory Tracker\": \"\",\r\n            \"Variant Inventory Qty\": null,\r\n            \"Variant Inventory Policy\": \"deny\",\r\n            \"Variant Fulfillment Service\": \"manual\",\r\n            \"Variant Price\": \"\",\r\n            \"Variant Compare At Price\": \"\",\r\n            \"Variant Requires Shipping\": \"TRUE\",\r\n            \"Variant Taxable\": \"TRUE\",\r\n            \"Variant Barcode\": \"\",\r\n            \"Image Src\": \"\",\r\n            \"Image Position\": \"\",\r\n            \"Image Alt Text\": \"\",\r\n            \"Gift Card\": \"\",\r\n            \"SEO Title\": \"\",\r\n            \"SEO Description\": \"\",\r\n            \"Google Shopping / Google Product Category\": \"\",\r\n            \"Google Shopping / Gender\": \"\",\r\n            \"Google Shopping / Age Group\": \"\",\r\n            \"Google Shopping / MPN\": \"\",\r\n            \"Google Shopping / AdWords Grouping\": \"\",\r\n            \"Google Shopping / AdWords Labels\": \"\",\r\n            \"Google Shopping / Condition\": \"\",\r\n            \"Google Shopping / Custom Product\": \"\",\r\n            \"Google Shopping / Custom Label 0\": \"\",\r\n            \"Google Shopping / Custom Label 1\": \"\",\r\n            \"Google Shopping / Custom Label 2\": \"\",\r\n            \"Google Shopping / Custom Label 3\": \"\",\r\n            \"Google Shopping / Custom Label 4\": \"\",\r\n            \"Variant Image\": \"\",\r\n            \"Variant Weight Unit\": \"\",\r\n            \"Variant Tax Code\": \"\",\r\n            \"Cost per item\": \"\"\r\n        }\r\n        let arrKhauTrang = [\r\n            [\"10pcs Filter\", \"KZDP - 10 Filter\", \"https://cdn.shopify.com/s/files/1/2513/0866/products/PM2.5_c97dfba6-b8ee-44c0-8118-4253352dca81.jpg\"],\r\n            [\"10\", \"330MSTKZ- CM200401\", \"https://cdn.shopify.com/s/files/1/2513/0866/products/v-1567__1211021604_0d322591-4251-442e-b8fa-69f572fd7ab8.jpg\"],\r\n            [\"11\", \"AAPTMK - Orange\", \"https://cdn.shopify.com/s/files/1/2513/0866/products/v-1568__398361867_689db9a0-4c6e-4ef4-ab9c-0e8544ad4611.jpg\"],\r\n            [\"12\", \"AAPTMK - Blue\", \"https://cdn.shopify.com/s/files/1/2513/0866/products/v-1569__-1635293110_50f1fbe2-8a03-4ea1-9174-0025f2bd1456.jpg\"],\r\n            [\"13\", \"AAPTMK - White\", \"https://cdn.shopify.com/s/files/1/2513/0866/products/v-1570__1050369133_4b68df7a-a2b3-45b1-a6e0-df31bb039ee0.jpg\"],\r\n            [\"10 pcs filter\", \"HXTDP- 10 filters\", \"https://cdn.shopify.com/s/files/1/2513/0866/products/2020-04-1717.53.38_01f7887d-b0bf-41ad-95e9-8a5d715d7a02.jpg\"],\r\n            [\"5\", \"AAMDMK - Red\", \"https://cdn.shopify.com/s/files/1/2513/0866/products/v-5__1132852788_fde86528-ddcc-4336-8486-ea27d38662d5.jpg\"],\r\n            [\"6\", \"AAMDMK - Blue\", \"https://cdn.shopify.com/s/files/1/2513/0866/products/v-6__-892179163_d1bd8464-8c53-4ec9-9751-b50970694b46.jpg\"]\r\n        ]\r\n\r\n        for (let i = 0; i < arrKhauTrang.length; i++) {\r\n            let item = { ...mockData };\r\n            item[\"Handle\"] = items[0][\"Handle\"];\r\n            item[\"Option1 Value\"] = arrKhauTrang[i][0];\r\n            item[\"Variant SKU\"] = arrKhauTrang[i][1];\r\n            item[\"Variant Image\"] = arrKhauTrang[i][2];\r\n            item[\"Variant Price\"] = \"24.99\";\r\n            item[\"Variant Compare At Price\"] = \"32.99\";\r\n\r\n\r\n            items.push(item);\r\n        }\r\n\r\n        items[0][\"Variant SKU\"] = \"KZDP -\" + items[0][\"Variant SKU\"]\r\n        return items\r\n    }\r\n    let product = props.Product;\r\n    let changeItemProduct = (name) => {\r\n\r\n        let itemSelect = product.filter(item => item.productName === name)[0];\r\n        setshowProduct({ mockData: itemSelect.mockData, show: true, name: name, list: itemSelect.listVariant });\r\n\r\n    }\r\n    let addProduct = () => {\r\n        setshowProduct({\r\n            mockData: {\r\n                \"Handle\": \"\",\r\n                \"Title\": \"\",\r\n                \"Body (HTML)\": '',\r\n                \"Vendor\": \"\",\r\n                \"Type\": \"\",\r\n                \"Tags\": \"\",\r\n                \"Published\": \"\",\r\n                \"Option1 Name\": \"\",\r\n                \"Option1 Value\": \"\",\r\n                \"Option2 Name\": \"\",\r\n                \"Option2 Value\": \"\",\r\n                \"Option3 Name\": \"\",\r\n                \"Option3 Value\": \"\",\r\n                \"Variant SKU\": \"\",\r\n                \"Variant Grams\": \"\",\r\n                \"Variant Inventory Tracker\": \"\",\r\n                \"Variant Inventory Qty\": null,\r\n                \"Variant Inventory Policy\": \"deny\",\r\n                \"Variant Fulfillment Service\": \"manual\",\r\n                \"Variant Price\": \"\",\r\n                \"Variant Compare At Price\": \"\",\r\n                \"Variant Requires Shipping\": \"TRUE\",\r\n                \"Variant Taxable\": \"TRUE\",\r\n                \"Variant Barcode\": \"\",\r\n                \"Image Src\": \"\",\r\n                \"Image Position\": \"\",\r\n                \"Image Alt Text\": \"\",\r\n                \"Gift Card\": \"FALSE\",\r\n                \"SEO Title\": \"\",\r\n                \"SEO Description\": \"\",\r\n                \"Google Shopping / Google Product Category\": \"\",\r\n                \"Google Shopping / Gender\": \"\",\r\n                \"Google Shopping / Age Group\": \"\",\r\n                \"Google Shopping / MPN\": \"\",\r\n                \"Google Shopping / AdWords Grouping\": \"\",\r\n                \"Google Shopping / AdWords Labels\": \"\",\r\n                \"Google Shopping / Condition\": \"\",\r\n                \"Google Shopping / Custom Product\": \"\",\r\n                \"Google Shopping / Custom Label 0\": \"\",\r\n                \"Google Shopping / Custom Label 1\": \"\",\r\n                \"Google Shopping / Custom Label 2\": \"\",\r\n                \"Google Shopping / Custom Label 3\": \"\",\r\n                \"Google Shopping / Custom Label 4\": \"\",\r\n                \"Variant Image\": \"\",\r\n                \"Variant Weight Unit\": \"\",\r\n                \"Variant Tax Code\": \"\",\r\n                \"Cost per item\": \"\"\r\n            }\r\n            , show: true, name: \"\", list: []\r\n        });\r\n    }\r\n    let closeModalProduct = () => {\r\n        setshowProduct({\r\n            mockData: {\r\n                \"Handle\": \"\",\r\n                \"Title\": \"\",\r\n                \"Body (HTML)\": '',\r\n                \"Vendor\": \"\",\r\n                \"Type\": \"\",\r\n                \"Tags\": \"\",\r\n                \"Published\": \"\",\r\n                \"Option1 Name\": \"\",\r\n                \"Option1 Value\": \"\",\r\n                \"Option2 Name\": \"\",\r\n                \"Option2 Value\": \"\",\r\n                \"Option3 Name\": \"\",\r\n                \"Option3 Value\": \"\",\r\n                \"Variant SKU\": \"\",\r\n                \"Variant Grams\": \"\",\r\n                \"Variant Inventory Tracker\": \"\",\r\n                \"Variant Inventory Qty\": null,\r\n                \"Variant Inventory Policy\": \"deny\",\r\n                \"Variant Fulfillment Service\": \"manual\",\r\n                \"Variant Price\": \"\",\r\n                \"Variant Compare At Price\": \"\",\r\n                \"Variant Requires Shipping\": \"TRUE\",\r\n                \"Variant Taxable\": \"TRUE\",\r\n                \"Variant Barcode\": \"\",\r\n                \"Image Src\": \"\",\r\n                \"Image Position\": \"\",\r\n                \"Image Alt Text\": \"\",\r\n                \"Gift Card\": \"FALSE\",\r\n                \"SEO Title\": \"\",\r\n                \"SEO Description\": \"\",\r\n                \"Google Shopping / Google Product Category\": \"\",\r\n                \"Google Shopping / Gender\": \"\",\r\n                \"Google Shopping / Age Group\": \"\",\r\n                \"Google Shopping / MPN\": \"\",\r\n                \"Google Shopping / AdWords Grouping\": \"\",\r\n                \"Google Shopping / AdWords Labels\": \"\",\r\n                \"Google Shopping / Condition\": \"\",\r\n                \"Google Shopping / Custom Product\": \"\",\r\n                \"Google Shopping / Custom Label 0\": \"\",\r\n                \"Google Shopping / Custom Label 1\": \"\",\r\n                \"Google Shopping / Custom Label 2\": \"\",\r\n                \"Google Shopping / Custom Label 3\": \"\",\r\n                \"Google Shopping / Custom Label 4\": \"\",\r\n                \"Variant Image\": \"\",\r\n                \"Variant Weight Unit\": \"\",\r\n                \"Variant Tax Code\": \"\",\r\n                \"Cost per item\": \"\"\r\n            }\r\n            , show: false, name: \"\", list: []\r\n        })\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className=\"container ctn-app\">\r\n                <div className=\"row\">\r\n                    {product.map((item, key) => <div className={\"col-3 namepro\" + ((SelectProduct === item.productName) ? \" select-pro\" : \"\")} key={key} onClick={() => setSelectProduct(item.productName)}>\r\n                        {item.productName}\r\n                        <div onClick={() => changeItemProduct(item.productName)} className=\"more-info\">\r\n                            v\r\n                        </div>\r\n                    </div>)}\r\n                    <div className=\"col-3\" onClick={addProduct} >Add Product</div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"get-link\">\r\n                    <input type=\"text\" placeholder=\"link\" onChange={(e) => setLinkParent(e.target.value)} ></input>\r\n                    <button onClick={fetchFolderParent} className=\"ml-2\">get</button>\r\n\r\n\r\n                </div>\r\n                {(showProduct.show === true) ? <button onClick={closeModalProduct} className=\"modal-closse\">X</button> : \"\"}\r\n\r\n\r\n                {(showProduct.show === true) ? <LocalItem mockData={showProduct.mockData} Product={props.Product} name={showProduct.name} list={showProduct.list} /> : \"\"}\r\n\r\n\r\n            </div>\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useState, useEffect } from 'react';\r\nimport Home from './Home/Home';\r\nimport './App.css';\r\nimport LocalItem from './Home/LocalItem';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [Product, setProduct] = useState([]);\r\n \r\n  useEffect(() => { // fetch glass\r\n    let ignore = false;\r\n    async function fetchData() {\r\n      const result = await axios(\"http://157.230.244.57:7000/?id=shopifyItem\");\r\n      if (!ignore) {\r\n      \r\n\r\n        let items = result.data[0].item_post.items;\r\n\r\n  \r\n        setProduct(items);\r\n      };\r\n    }\r\n    fetchData();\r\n    return () => { ignore = true; }\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Home Product={Product} />\r\n      {/* <LocalItem  Product={Product} /> */}\r\n      <a link=\"https://www.facebook.com/july.hph\" className=\"july\">July Hoang</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.Fragment>\n  {/* <React.StrictMode> */}\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}