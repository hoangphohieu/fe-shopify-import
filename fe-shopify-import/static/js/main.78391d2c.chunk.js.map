{"version":3,"sources":["constants.js","Home/LocalItem.js","Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["FetchDrive","LocalItem","props","console","log","useState","mockData","MockData","setMockData","productName","name","Option1Name","Option2Name","Option3Name","list","MockVariant","setMockVariant","undefined","localStorage","product","JSON","stringify","renderLocal","listOption","className","type","onChange","e","target","value","placeholder","Title","Vendor","Type","Tags","id","scope","map","item","key","itemListOption","key2","param","changeVariant","onClick","NameDrive","Option1Value","Option2Value","Option3Value","VariantPrice","VariantCompareAtPrice","VariantInventoryQty","VariantSKU","data","_","kebabCase","listVariant","filter","parse","length","i","window","location","reload","Fragment","Home","LinkParent","setLinkParent","folderChild","setfolderChild","dataChild","setdataChild","SelectProduct","setSelectProduct","show","showProduct","setshowProduct","useEffect","ignore","a","axios","method","url","constants","link","result","webContentLink","folderChild2","shift","fetchData","createChild","items","itemsSau","itemFirst","split","join","itemProduct","push","difference","alert","j","imgDrive","Handle","variant","error","forEach","endsWith","replace","pop","mimeType","csvDownload","itemSelect","changeItemProduct","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.78391d2c.chunk.js","sourcesContent":["export const FetchDrive = \"http://157.230.244.57:7001/parent\";\r\n// export const FetchChild = \"http://localhost:7000/child\";","import React, { useState } from 'react';\r\nimport _ from \"lodash\";\r\nfunction LocalItem(props) {\r\n      console.log(props);\r\n\r\n      const [MockData, setMockData] = useState(props.mockData);\r\n      const [MockVariant, setMockVariant] = useState({\r\n            productName: props.name,\r\n            Option1Name: (props.mockData) ? props.mockData[\"Option1 Name\"] : \"\",\r\n            Option2Name: (props.mockData) ? props.mockData[\"Option2 Name\"] : \"\",\r\n            Option3Name: (props.mockData) ? props.mockData[\"Option3 Name\"] : \"\",\r\n            list: props.list\r\n      });\r\n\r\n      if (localStorage.product === undefined) localStorage.product = JSON.stringify([]);\r\n      let renderLocal = \"\";\r\n      let changeVariant = (param, key, value) => {\r\n            let list = MockVariant.list;\r\n            list[key][param] = value;\r\n            setMockVariant({ ...MockVariant, list: [...list] });\r\n      }\r\n      let listOption = ['NameDrive', 'Option1Value', 'Option2Value', 'Option3Value', 'VariantPrice', 'VariantCompareAtPrice', 'VariantInventoryQty', 'VariantSKU']\r\n\r\n      let addVariant = () => {\r\n            setMockVariant({\r\n                  ...MockVariant, list: [...MockVariant.list, {\r\n                        NameDrive: \"\",\r\n                        Option1Value: \"\",\r\n                        Option2Value: \"\",\r\n                        Option3Value: \"\",\r\n                        VariantPrice: \"\",\r\n                        VariantCompareAtPrice: \"\",\r\n                        VariantInventoryQty: \"\",\r\n                        VariantSKU: \"\"\r\n                  }]\r\n            });\r\n      }\r\n      let addProduct = () => {\r\n            let data = { ...MockData };\r\n            data[\"Handle\"] = _.kebabCase(data[\"Title\"]) + \"-\";\r\n            data[\"Option1 Name\"] = MockVariant.Option1Name;\r\n            data[\"Option2 Name\"] = MockVariant.Option2Name;\r\n            data[\"Option3 Name\"] = MockVariant.Option3Name;\r\n\r\n            let listVariant = MockVariant.list.filter(item => (item.NameDrive !== \"\"\r\n                  | item.Option1Value !== \"\"\r\n                  | item.Option2Value !== \"\"\r\n                  | item.Option3Value !== \"\"\r\n                  | item.VariantPrice !== \"\"\r\n                  | item.VariantCompareAtPrice !== \"\"\r\n                  | item.VariantInventoryQty !== \"\"\r\n                  | item.VariantSKU !== \"\"\r\n            ))\r\n            let product = JSON.parse(localStorage.product);\r\n            let proFilter = product.filter(item => item.productName === MockVariant.productName);\r\n            if (proFilter.length === 1) {\r\n                  for (let i = 0; i < product.length; i++) {\r\n                        if (product[i].productName === MockVariant.productName)\r\n                              product[i] = {\r\n                                    productName: MockVariant.productName,\r\n                                    mockData: data,\r\n                                    listVariant: listVariant\r\n                              }\r\n                  }\r\n            }\r\n            else {\r\n                  product = [...product, {\r\n                        productName: MockVariant.productName,\r\n                        mockData: data,\r\n                        listVariant: listVariant\r\n                  }]\r\n            }\r\n            localStorage.product = JSON.stringify(product);\r\n            window.location.reload(true);\r\n\r\n      }\r\n      let deleteProduct = () => {\r\n            let product = JSON.parse(localStorage.product).map(item => {\r\n                  if (item.productName === MockVariant.productName)\r\n                        return null\r\n                  else return item\r\n            });\r\n            console.log(product);\r\n            product = product.filter(item => item !== null);\r\n\r\n            localStorage.product = JSON.stringify(product);\r\n            window.location.reload(true);\r\n      }\r\n      if (props.mockData !== undefined) renderLocal = <div className=\"modal-app\">\r\n\r\n            <div className=\"catdat_tongquat mt-5\">\r\n                  <div className=\"one-pro\">\r\n                        <span>product Name</span>\r\n                        <input type=\"text\"\r\n                              onChange={(e) => setMockVariant({ ...MockVariant, productName: e.target.value })}\r\n                              value={MockVariant.productName}\r\n                              placeholder=\"product Name\"\r\n                        />\r\n                  </div>\r\n\r\n                  <div className=\"one-pro\">\r\n                        <span>Title ()</span>\r\n                        <input type=\"text\"\r\n                              onChange={(e) => setMockData({ ...MockData, Title: e.target.value })}\r\n                              value={MockData.Title}\r\n                        />\r\n                  </div>\r\n                  <div className=\"one-pro\">\r\n                        <span>Body (HTML)</span>\r\n                        <input type=\"text\"\r\n                              onChange={(e) => setMockData({ ...MockData, \"Body (HTML)\": e.target.value })}\r\n                              value={MockData[\"Body (HTML)\"]}\r\n                        />\r\n                  </div>\r\n                  <div className=\"one-pro\">\r\n                        <span>Vendor (nhà cung cấp)</span>\r\n                        <input type=\"text\"\r\n                              onChange={(e) => setMockData({ ...MockData, Vendor: e.target.value })}\r\n                              value={MockData.Vendor}\r\n                        />\r\n                  </div>\r\n                  <div className=\"one-pro\">\r\n                        <span>Type (loại sản phẩm: phonecase,...)</span>\r\n                        <input type=\"text\"\r\n                              onChange={(e) => setMockData({ ...MockData, Type: e.target.value })}\r\n                              value={MockData.Type}\r\n                        />\r\n                  </div>\r\n                  <div className=\"one-pro\">\r\n                        <span>Tags (tag sản phẩm, ngăn cách bởi dấu phẩy)</span>\r\n                        <input type=\"text\"\r\n                              onChange={(e) => setMockData({ ...MockData, Tags: e.target.value })}\r\n                              value={MockData.Tags}\r\n                        />\r\n                  </div>\r\n                  <div className=\"one-pro\">\r\n                        <span>Variant Grams (cân nặng sản phẩm)</span>\r\n                        <input type=\"text\"\r\n                              onChange={(e) => setMockData({ ...MockData, \"Variant Grams\": e.target.value })}\r\n                              value={MockData[\"Variant Grams\"]}\r\n                        />\r\n                  </div>\r\n                  <div className=\"one-pro\">\r\n                        <span>Variant Inventory Qty (lượng hàng trong kho)</span>\r\n                        <input type=\"text\"\r\n                              onChange={(e) => setMockData({ ...MockData, \"Variant Inventory Qty\": e.target.value })}\r\n                              value={MockData[\"Variant Inventory Qty\"]}\r\n                        />\r\n                  </div>\r\n                  <div className=\"one-pro\">\r\n                        <span>Variant Inventory Policy (deny: hết kho thì thôi, continue hết kho vẫn bán)</span>\r\n                        <select id=\"Variant_Inventory_Policy\" onChange={(e) => setMockData({ ...MockData, \"Variant Inventory Policy\": e.target.value })}>\r\n                              <option value=\"deny\">deny</option>\r\n                              <option value=\"continue\">continue</option>\r\n                        </select>\r\n                  </div>\r\n                  <div className=\"one-pro\">\r\n                        <span>Variant Price (giá thật sự)</span>\r\n                        <input type=\"text\"\r\n                              onChange={(e) => setMockData({ ...MockData, \"Variant Price\": e.target.value })}\r\n                              value={MockData[\"Variant Price\"]}\r\n                        />\r\n                  </div>\r\n                  <div className=\"one-pro\">\r\n                        <span>Variant Compare At Price (giá ảo)</span>\r\n                        <input type=\"text\"\r\n                              onChange={(e) => setMockData({ ...MockData, \"Variant Compare At Price\": e.target.value })}\r\n                              value={MockData[\"Variant Compare At Price\"]}\r\n                        />\r\n                  </div>\r\n                  <div className=\"one-pro\">\r\n                        <span>Variant Weight Unit (đơn vị cân nặng)</span>\r\n                        <select id=\"Variant_Weight_Unit\" onChange={(e) => setMockData({ ...MockData, \"Variant Weight Unit\": e.target.value })} >\r\n                              <option value=\"g\">g</option>\r\n                              <option value=\"kg\">kg</option>\r\n                              <option value=\"lb\">lb</option>\r\n                              <option value=\"oz\">oz</option>\r\n                        </select>\r\n                  </div>\r\n            </div>\r\n\r\n            <div className=\"caidat_bienthe\">\r\n                  <table className=\"\">\r\n                        <thead>\r\n                              <tr>\r\n                                    <td >NameDrive</td>\r\n                                    <th scope=\"col\">\r\n                                          <input type=\"text\"\r\n                                                onChange={(e) => setMockVariant({ ...MockVariant, Option1Name: e.target.value })}\r\n                                                value={MockVariant.Option1Name}\r\n                                                placeholder=\"option1 name\"\r\n                                          />\r\n                                    </th>\r\n                                    <th scope=\"col\">\r\n                                          <input type=\"text\"\r\n                                                onChange={(e) => setMockVariant({ ...MockVariant, Option2Name: e.target.value })}\r\n                                                value={MockVariant.Option2Name}\r\n                                                placeholder=\"option2 name\"\r\n                                          />\r\n                                    </th>\r\n                                    <th scope=\"col\">\r\n                                          <input type=\"text\"\r\n                                                onChange={(e) => setMockVariant({ ...MockVariant, Option3Name: e.target.value })}\r\n                                                value={MockVariant.Option3Name}\r\n                                                placeholder=\"option3 name\"\r\n                                          />\r\n                                    </th>\r\n                                    <td >giá thật</td>\r\n                                    <td >giá ảo</td>\r\n                                    <td >kho</td>\r\n                                    <td >sku</td>\r\n                              </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                              {MockVariant.list.map((item, key) => <tr key={key}>\r\n                                    {listOption.map((itemListOption, key2) => <td key={key2}>\r\n                                          <input type=\"text\"\r\n                                                onChange={(e) => changeVariant(itemListOption, key, e.target.value)}\r\n                                                value={item[itemListOption]}\r\n                                          />\r\n                                    </td>)}\r\n\r\n\r\n                              </tr>)}\r\n\r\n\r\n                        </tbody>\r\n                  </table>\r\n            </div>\r\n\r\n            <button className=\"add_variant mt-3\" onClick={addVariant}>\r\n                  add Variant\r\n                    </button>\r\n                    <br/>\r\n            <button onClick={addProduct} className=\"mt-5 mr-2\">\r\n                  Lưu Sản phẩm\r\n                   </button>\r\n            <button onClick={deleteProduct}>\r\n                  xóa sản phẩm\r\n                   </button>\r\n      </div>\r\n\r\n\r\n\r\n      return (\r\n            <React.Fragment>\r\n                  {renderLocal}\r\n            </React.Fragment>\r\n      );\r\n}\r\n\r\nexport default LocalItem;\r\n\r\n\r\n\r\n\r\n\r\n// {\r\n//       \"Handle\": \"\",\r\n//       \"Title\": \"\",\r\n//       \"Body (HTML)\": \"\",\r\n//       \"Vendor\": \"\",\r\n//       \"Type\": \"\",\r\n//       \"Tags\": \"\",\r\n//       \"Published\": \"\",\r\n//       \"Option1 Name\": \"\",\r\n//       \"Option1 Value\": \"\",\r\n//       \"Option2 Name\": \"\",\r\n//       \"Option2 Value\": \"\",\r\n//       \"Option3 Name\": \"\",\r\n//       \"Option3 Value\": \"\",\r\n//       \"Variant SKU\": \"\",\r\n//       \"Variant Grams\": \"\",\r\n//       \"Variant Inventory Tracker\": \"\",\r\n//       \"Variant Inventory Qty\": null,\r\n//       \"Variant Inventory Policy\": \"deny\",\r\n//       \"Variant Fulfillment Service\": \"manual\",\r\n//       \"Variant Price\": \"\",\r\n//       \"Variant Compare At Price\": \"\",\r\n//       \"Variant Requires Shipping\": \"TRUE\",\r\n//       \"Variant Taxable\": \"TRUE\",\r\n//       \"Variant Barcode\": \"\",\r\n//       \"Image Src\": \"\",\r\n//       \"Image Position\": \"\",\r\n//       \"Image Alt Text\": \"\",\r\n//       \"Gift Card\": \"FALSE\",\r\n//       \"SEO Title\": \"\",\r\n//       \"SEO Description\": \"\",\r\n//       \"Google Shopping / Google Product Category\": \"\",\r\n//       \"Google Shopping / Gender\": \"\",\r\n//       \"Google Shopping / Age Group\": \"\",\r\n//       \"Google Shopping / MPN\": \"\",\r\n//       \"Google Shopping / AdWords Grouping\": \"\",\r\n//       \"Google Shopping / AdWords Labels\": \"\",\r\n//       \"Google Shopping / Condition\": \"\",\r\n//       \"Google Shopping / Custom Product\": \"\",\r\n//       \"Google Shopping / Custom Label 0\": \"\",\r\n//       \"Google Shopping / Custom Label 1\": \"\",\r\n//       \"Google Shopping / Custom Label 2\": \"\",\r\n//       \"Google Shopping / Custom Label 3\": \"\",\r\n//       \"Google Shopping / Custom Label 4\": \"\",\r\n//       \"Variant Image\": \"\",\r\n//       \"Variant Weight Unit\": \"\",\r\n//       \"Variant Tax Code\": \"\",\r\n//       \"Cost per item\": \"\"\r\n// }","import React, { useState, useEffect } from 'react';\r\nimport * as constants from \"../constants\";\r\nimport axios from \"axios\";\r\n// import CsvDownload from \"react-json-to-csv\";\r\nimport csvDownload from 'json-to-csv-export';\r\nimport _ from \"lodash\";\r\nimport LocalItem from './LocalItem';\r\nfunction Home(props) {\r\n    const [LinkParent, setLinkParent] = useState(\"\");\r\n    const [folderChild, setfolderChild] = useState([]);\r\n    const [dataChild, setdataChild] = useState([]);\r\n    const [SelectProduct, setSelectProduct] = useState(null);\r\n    const [showProduct, setshowProduct] = useState({\r\n        mockData: {\r\n            \"Handle\": \"\",\r\n            \"Title\": \"\",\r\n            \"Body (HTML)\": \"\",\r\n            \"Vendor\": \"\",\r\n            \"Type\": \"\",\r\n            \"Tags\": \"\",\r\n            \"Published\": \"\",\r\n            \"Option1 Name\": \"\",\r\n            \"Option1 Value\": \"\",\r\n            \"Option2 Name\": \"\",\r\n            \"Option2 Value\": \"\",\r\n            \"Option3 Name\": \"\",\r\n            \"Option3 Value\": \"\",\r\n            \"Variant SKU\": \"\",\r\n            \"Variant Grams\": \"\",\r\n            \"Variant Inventory Tracker\": \"\",\r\n            \"Variant Inventory Qty\": null,\r\n            \"Variant Inventory Policy\": \"deny\",\r\n            \"Variant Fulfillment Service\": \"manual\",\r\n            \"Variant Price\": \"\",\r\n            \"Variant Compare At Price\": \"\",\r\n            \"Variant Requires Shipping\": \"TRUE\",\r\n            \"Variant Taxable\": \"TRUE\",\r\n            \"Variant Barcode\": \"\",\r\n            \"Image Src\": \"\",\r\n            \"Image Position\": \"\",\r\n            \"Image Alt Text\": \"\",\r\n            \"Gift Card\": \"FALSE\",\r\n            \"SEO Title\": \"\",\r\n            \"SEO Description\": \"\",\r\n            \"Google Shopping / Google Product Category\": \"\",\r\n            \"Google Shopping / Gender\": \"\",\r\n            \"Google Shopping / Age Group\": \"\",\r\n            \"Google Shopping / MPN\": \"\",\r\n            \"Google Shopping / AdWords Grouping\": \"\",\r\n            \"Google Shopping / AdWords Labels\": \"\",\r\n            \"Google Shopping / Condition\": \"\",\r\n            \"Google Shopping / Custom Product\": \"\",\r\n            \"Google Shopping / Custom Label 0\": \"\",\r\n            \"Google Shopping / Custom Label 1\": \"\",\r\n            \"Google Shopping / Custom Label 2\": \"\",\r\n            \"Google Shopping / Custom Label 3\": \"\",\r\n            \"Google Shopping / Custom Label 4\": \"\",\r\n            \"Variant Image\": \"\",\r\n            \"Variant Weight Unit\": \"\",\r\n            \"Variant Tax Code\": \"\",\r\n            \"Cost per item\": \"\"\r\n        }\r\n        , show: false, list: []\r\n    });\r\n    useEffect(() => {\r\n        let ignore = false;\r\n        async function fetchData() {\r\n            let result = await axios({\r\n                method: 'post',\r\n                url: constants.FetchDrive,\r\n                data: {\r\n                    link: folderChild[0].id\r\n                }\r\n            });\r\n            result = result.data.map(item => { return { name: item.name, url: item.webContentLink } });\r\n            if (!ignore) {\r\n                setdataChild([...dataChild, { name: folderChild[0].name, data: result }]);\r\n                let folderChild2 = folderChild;\r\n                folderChild2.shift();\r\n                setfolderChild([...folderChild2]);\r\n            };\r\n        }\r\n        console.log(folderChild);\r\n        console.log(dataChild);\r\n        if (folderChild.length > 0) fetchData();\r\n        return () => { ignore = true; }\r\n    }, [folderChild]);\r\n    console.log(showProduct);\r\n\r\n    let createChild = (dataChild, product) => {\r\n        console.log(dataChild);\r\n        console.log(product);\r\n        let items = [], itemsSau = [];\r\n        {// item dau tien\r\n            let item = { ...product.mockData };\r\n            let itemFirst = dataChild.data.filter(item => item.name === \"1.jpg\");\r\n            if (itemFirst.length === 1) {\r\n                item[\"Handle\"] = item[\"Handle\"] + dataChild.name.split(\" \").join(\"-\");\r\n                item[\"Image Position\"] = itemFirst[0].name.split(\".\")[0];\r\n                item[\"Image Src\"] = itemFirst[0].url.split(\"&\")[0];\r\n                item[\"Variant Image\"] = itemFirst[0].url.split(\"&\")[0];\r\n                let itemProduct = product.listVariant.filter(item => item.NameDrive === itemFirst[0].name.split(\".\")[0])[0];\r\n                console.log(itemProduct);\r\n                item[\"Option1 Value\"] = itemProduct.Option1Value;\r\n                item[\"Option2 Value\"] = itemProduct.Option2Value;\r\n                item[\"Option3 Value\"] = itemProduct.Option3Value;\r\n                item[\"Title\"] = item.Title + \" \" + dataChild.name;\r\n                item[\"Variant Compare At Price\"] = itemProduct.VariantCompareAtPrice;\r\n                item[\"Variant Inventory Qty\"] = itemProduct.VariantInventoryQty;\r\n                item[\"Variant Price\"] = itemProduct.VariantPrice;\r\n                item[\"Variant SKU\"] = itemProduct.VariantSKU;\r\n                item[\"Gift Card\"] = \"FALSE\";\r\n                items.push(item);\r\n                itemsSau = _.difference(dataChild.data, itemFirst);\r\n            }\r\n            else {\r\n                alert(\"phai co duy nhat 1 anh 1.jpg\");\r\n                window.location.reload(true);\r\n            }\r\n\r\n        }\r\n        for (let j = 0; j < itemsSau.length; j++) {\r\n            let mockData = {\r\n                \"Handle\": \"\",\r\n                \"Title\": \"\",\r\n                \"Body (HTML)\": \"\",\r\n                \"Vendor\": \"\",\r\n                \"Type\": \"\",\r\n                \"Tags\": \"\",\r\n                \"Published\": \"\",\r\n                \"Option1 Name\": \"\",\r\n                \"Option1 Value\": \"\",\r\n                \"Option2 Name\": \"\",\r\n                \"Option2 Value\": \"\",\r\n                \"Option3 Name\": \"\",\r\n                \"Option3 Value\": \"\",\r\n                \"Variant SKU\": \"\",\r\n                \"Variant Grams\": \"\",\r\n                \"Variant Inventory Tracker\": \"\",\r\n                \"Variant Inventory Qty\": null,\r\n                \"Variant Inventory Policy\": \"deny\",\r\n                \"Variant Fulfillment Service\": \"manual\",\r\n                \"Variant Price\": \"\",\r\n                \"Variant Compare At Price\": \"\",\r\n                \"Variant Requires Shipping\": \"TRUE\",\r\n                \"Variant Taxable\": \"TRUE\",\r\n                \"Variant Barcode\": \"\",\r\n                \"Image Src\": \"\",\r\n                \"Image Position\": \"\",\r\n                \"Image Alt Text\": \"\",\r\n                \"Gift Card\": \"\",\r\n                \"SEO Title\": \"\",\r\n                \"SEO Description\": \"\",\r\n                \"Google Shopping / Google Product Category\": \"\",\r\n                \"Google Shopping / Gender\": \"\",\r\n                \"Google Shopping / Age Group\": \"\",\r\n                \"Google Shopping / MPN\": \"\",\r\n                \"Google Shopping / AdWords Grouping\": \"\",\r\n                \"Google Shopping / AdWords Labels\": \"\",\r\n                \"Google Shopping / Condition\": \"\",\r\n                \"Google Shopping / Custom Product\": \"\",\r\n                \"Google Shopping / Custom Label 0\": \"\",\r\n                \"Google Shopping / Custom Label 1\": \"\",\r\n                \"Google Shopping / Custom Label 2\": \"\",\r\n                \"Google Shopping / Custom Label 3\": \"\",\r\n                \"Google Shopping / Custom Label 4\": \"\",\r\n                \"Variant Image\": \"\",\r\n                \"Variant Weight Unit\": \"\",\r\n                \"Variant Tax Code\": \"\",\r\n                \"Cost per item\": \"\"\r\n            }\r\n            let imgDrive = itemsSau[j];\r\n            mockData[\"Handle\"] = product.mockData.Handle + dataChild.name.split(\" \").join(\"-\");\r\n            mockData[\"Image Position\"] = imgDrive.name.split(\".\")[0];\r\n            mockData[\"Image Src\"] = imgDrive.url.split(\"&\")[0];\r\n            mockData[\"Variant Image\"] = imgDrive.url.split(\"&\")[0];\r\n            let variant = product.listVariant.filter(item => item.NameDrive === mockData[\"Image Position\"])[0];\r\n            try {\r\n                // console.log(variant.Option1Value);\r\n                if (variant.Option1Value !== \"\") {\r\n                    mockData[\"Option1 Value\"] = variant.Option1Value;\r\n                    mockData[\"Option2 Value\"] = variant.Option2Value;\r\n                    mockData[\"Option3 Value\"] = variant.Option3Value;\r\n                    mockData[\"Variant Compare At Price\"] = variant.VariantCompareAtPrice;\r\n                    mockData[\"Variant Inventory Qty\"] = variant.VariantInventoryQty;\r\n                    mockData[\"Variant Price\"] = variant.VariantPrice;\r\n                    mockData[\"Variant SKU\"] = variant.VariantSKU;\r\n                    items.push(mockData);\r\n                }\r\n                else {\r\n                    mockData[\"Variant Image\"] = \"\";\r\n                    mockData[\"Variant Inventory Policy\"] = \"\";\r\n                    mockData[\"Variant Fulfillment Service\"] = \"\";\r\n                    mockData[\"Variant Requires Shipping\"] = \"\";\r\n                    mockData[\"Variant Taxable\"] = \"\";\r\n                    items.push(mockData);\r\n                }\r\n            } catch (error) {\r\n                // alert(`thừa \"${mockData[\"Image Position\"]}\" trong drive \"${dataChild.name}\" `);\r\n            }\r\n\r\n        }\r\n        items.forEach(item => {\r\n            if (item[\"Variant Inventory Qty\"] === \"\") delete item[\"Variant Inventory Qty\"]\r\n        });\r\n        return items\r\n    }\r\n    useEffect(() => {\r\n        if (folderChild.length === 0 && dataChild.length !== 0) {\r\n            let product = JSON.parse(localStorage.product).filter(item => item.productName === SelectProduct)[0];\r\n            let items = []\r\n            for (let i = 0; i < dataChild.length; i++) {\r\n                items = [...items, ...createChild(dataChild[i], product)]\r\n                console.log(items);\r\n            }\r\n            csvDownload(items);\r\n            setdataChild([]);\r\n        }\r\n    });\r\n\r\n    async function fetchFolderParent() { // fetch folder tổng\r\n        if (SelectProduct !== null) {\r\n            let id = LinkParent;\r\n            if (id.endsWith(\"?usp=sharing\")) id = id.replace(\"?usp=sharing\", \"\");\r\n            id = id.split(\"/\").pop();\r\n            let result = await axios({\r\n                method: 'post',\r\n                url: constants.FetchDrive,\r\n                data: {\r\n                    link: id\r\n                }\r\n            });\r\n            result = result.data\r\n\r\n            if (result.length === 0) alert(\"kiem tra lai url\")\r\n            else {\r\n                result = result.filter(item => item.mimeType === \"application/vnd.google-apps.folder\").map(item => { return { name: item.name, id: item.id } });\r\n                setdataChild([]);\r\n                setfolderChild(result);\r\n            }\r\n        }\r\n        else {\r\n            alert(\"please select product\")\r\n        }\r\n\r\n\r\n    }\r\n\r\n    if (localStorage.product === undefined) localStorage.product = JSON.stringify([]);\r\n    let product = JSON.parse(localStorage.product);\r\n    let changeItemProduct = (name) => {\r\n        // const [showProduct, setshowProduct] = useState({ name: null, show: false });\r\n        let itemSelect = JSON.parse(localStorage.product).filter(item => item.productName === name)[0];\r\n        setshowProduct({ mockData: itemSelect.mockData, show: true, name: name, list: itemSelect.listVariant });\r\n\r\n    }\r\n    let addProduct = () => {\r\n        setshowProduct({\r\n            mockData: {\r\n                \"Handle\": \"\",\r\n                \"Title\": \"\",\r\n                \"Body (HTML)\": \"\",\r\n                \"Vendor\": \"\",\r\n                \"Type\": \"\",\r\n                \"Tags\": \"\",\r\n                \"Published\": \"\",\r\n                \"Option1 Name\": \"\",\r\n                \"Option1 Value\": \"\",\r\n                \"Option2 Name\": \"\",\r\n                \"Option2 Value\": \"\",\r\n                \"Option3 Name\": \"\",\r\n                \"Option3 Value\": \"\",\r\n                \"Variant SKU\": \"\",\r\n                \"Variant Grams\": \"\",\r\n                \"Variant Inventory Tracker\": \"\",\r\n                \"Variant Inventory Qty\": null,\r\n                \"Variant Inventory Policy\": \"deny\",\r\n                \"Variant Fulfillment Service\": \"manual\",\r\n                \"Variant Price\": \"\",\r\n                \"Variant Compare At Price\": \"\",\r\n                \"Variant Requires Shipping\": \"TRUE\",\r\n                \"Variant Taxable\": \"TRUE\",\r\n                \"Variant Barcode\": \"\",\r\n                \"Image Src\": \"\",\r\n                \"Image Position\": \"\",\r\n                \"Image Alt Text\": \"\",\r\n                \"Gift Card\": \"FALSE\",\r\n                \"SEO Title\": \"\",\r\n                \"SEO Description\": \"\",\r\n                \"Google Shopping / Google Product Category\": \"\",\r\n                \"Google Shopping / Gender\": \"\",\r\n                \"Google Shopping / Age Group\": \"\",\r\n                \"Google Shopping / MPN\": \"\",\r\n                \"Google Shopping / AdWords Grouping\": \"\",\r\n                \"Google Shopping / AdWords Labels\": \"\",\r\n                \"Google Shopping / Condition\": \"\",\r\n                \"Google Shopping / Custom Product\": \"\",\r\n                \"Google Shopping / Custom Label 0\": \"\",\r\n                \"Google Shopping / Custom Label 1\": \"\",\r\n                \"Google Shopping / Custom Label 2\": \"\",\r\n                \"Google Shopping / Custom Label 3\": \"\",\r\n                \"Google Shopping / Custom Label 4\": \"\",\r\n                \"Variant Image\": \"\",\r\n                \"Variant Weight Unit\": \"\",\r\n                \"Variant Tax Code\": \"\",\r\n                \"Cost per item\": \"\"\r\n            }\r\n            , show: true, name: \"\", list: []\r\n        });\r\n    }\r\n    let closeModalProduct = () => {\r\n        setshowProduct({\r\n            mockData: {\r\n                \"Handle\": \"\",\r\n                \"Title\": \"\",\r\n                \"Body (HTML)\": \"\",\r\n                \"Vendor\": \"\",\r\n                \"Type\": \"\",\r\n                \"Tags\": \"\",\r\n                \"Published\": \"\",\r\n                \"Option1 Name\": \"\",\r\n                \"Option1 Value\": \"\",\r\n                \"Option2 Name\": \"\",\r\n                \"Option2 Value\": \"\",\r\n                \"Option3 Name\": \"\",\r\n                \"Option3 Value\": \"\",\r\n                \"Variant SKU\": \"\",\r\n                \"Variant Grams\": \"\",\r\n                \"Variant Inventory Tracker\": \"\",\r\n                \"Variant Inventory Qty\": null,\r\n                \"Variant Inventory Policy\": \"deny\",\r\n                \"Variant Fulfillment Service\": \"manual\",\r\n                \"Variant Price\": \"\",\r\n                \"Variant Compare At Price\": \"\",\r\n                \"Variant Requires Shipping\": \"TRUE\",\r\n                \"Variant Taxable\": \"TRUE\",\r\n                \"Variant Barcode\": \"\",\r\n                \"Image Src\": \"\",\r\n                \"Image Position\": \"\",\r\n                \"Image Alt Text\": \"\",\r\n                \"Gift Card\": \"FALSE\",\r\n                \"SEO Title\": \"\",\r\n                \"SEO Description\": \"\",\r\n                \"Google Shopping / Google Product Category\": \"\",\r\n                \"Google Shopping / Gender\": \"\",\r\n                \"Google Shopping / Age Group\": \"\",\r\n                \"Google Shopping / MPN\": \"\",\r\n                \"Google Shopping / AdWords Grouping\": \"\",\r\n                \"Google Shopping / AdWords Labels\": \"\",\r\n                \"Google Shopping / Condition\": \"\",\r\n                \"Google Shopping / Custom Product\": \"\",\r\n                \"Google Shopping / Custom Label 0\": \"\",\r\n                \"Google Shopping / Custom Label 1\": \"\",\r\n                \"Google Shopping / Custom Label 2\": \"\",\r\n                \"Google Shopping / Custom Label 3\": \"\",\r\n                \"Google Shopping / Custom Label 4\": \"\",\r\n                \"Variant Image\": \"\",\r\n                \"Variant Weight Unit\": \"\",\r\n                \"Variant Tax Code\": \"\",\r\n                \"Cost per item\": \"\"\r\n            }\r\n            , show: false, name: \"\", list: []\r\n        })\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className=\"container ctn-app\">\r\n                <div className=\"row\">\r\n                    {product.map((item, key) => <div className={\"col-3 namepro\" + ((SelectProduct === item.productName) ? \" select-pro\" : \"\")} key={key} onClick={() => setSelectProduct(item.productName)}>\r\n                        {item.productName}\r\n                        <div onClick={() => changeItemProduct(item.productName)} className=\"more-info\">\r\n                            v\r\n                        </div>\r\n                    </div>)}\r\n                    <div className=\"col-3\" onClick={addProduct} >Add Product</div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"get-link\">\r\n                    <input type=\"text\" placeholder=\"link\" onChange={(e) => setLinkParent(e.target.value)} ></input>\r\n                    <button onClick={fetchFolderParent} className=\"ml-2\">get</button>\r\n\r\n\r\n                </div>\r\n                {(showProduct.show === true) ? <button onClick={closeModalProduct} className=\"modal-closse\">X</button> : \"\"}\r\n\r\n\r\n                {(showProduct.show === true) ? <LocalItem mockData={showProduct.mockData} name={showProduct.name} list={showProduct.list} /> : \"\"}\r\n\r\n\r\n            </div>\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport Home from './Home/Home';\r\nimport './App.css';\r\nimport LocalItem from './Home/LocalItem';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Home />\r\n      <LocalItem />\r\n      <a link=\"https://www.facebook.com/july.hph\" className=\"july\">July Hoang</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.Fragment>\n  {/* <React.StrictMode> */}\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}